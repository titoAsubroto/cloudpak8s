{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/integration/onprem-online/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-integration-onprem-online-index-mdx-f8b81deb7e12426fbbe9.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#introduction\"\n        }}>{`Introduction`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#prepare-for-installation\"\n        }}>{`Prepare For Installation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#run-the-integration-cloud-pak-install\"\n        }}>{`Run the Integration Cloud Pak install`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#deploy-capabilities\"\n        }}>{`Deploy Capabilities`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#example-files\"\n        }}>{`Example files`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#configyaml\"\n            }}>{`config.yaml`}</a></li>\n        </ul></li>\n    </ul>\n    <h2>{`Introduction`}</h2>\n    <p>{`This page describes all the steps on how to deploy the Integration Cloud\nPak to a VMware on premises environment using the IBM Entitled registry. The\nsteps below includes instructions to: `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Prepare the bastion/installation node for the installation`}</li>\n      <li parentName=\"ol\">{`Run the Integration Cloud Pak installer to deploy to an existing\nOpenShift cluster.`}</li>\n    </ol>\n    <h2>{`Prepare For Installation`}</h2>\n    <p>{`In many production scenarios the master nodes may not be accessed via ssh,\nwe have to choose bastion node to proceed with the installation. `}</p>\n    <p><strong parentName=\"p\">{`Installer Node requirements:`}</strong>{`  `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Sufficient resources of `}<inlineCode parentName=\"li\">{`4cpu 16GB ram ~120 GB Diskspace`}</inlineCode></li>\n      <li parentName=\"ul\">{`OpenShift CLI, which can be installed following the instructions `}<a parentName=\"li\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/openshift?topic=openshift-openshift-cli\"\n        }}>{`here on IBM Cloud`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Install Docker (v2.2 is compliant and works with Open Shift)`}</li>\n      <li parentName=\"ul\">{`Install Kubernetes CLI kubectl `}</li>\n    </ul>\n    <p>{`Once the CLIs are installed, check if you can login to openshift environment:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Get login token from openshift console`}</li>\n      <li parentName=\"ol\">{`Run the `}<inlineCode parentName=\"li\">{`oc login`}</inlineCode>{` command from a terminal shell.`}</li>\n      <li parentName=\"ol\">{`You should see the cluster logged in message along with list of projects.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Installing on Master or Infra node:`}</strong><br parentName=\"p\"></br>{`\n`}{`The value of the master, proxy, and management parameters is an array and\ncan have multiple nodes. Due to a limitation from OpenShift, if you want\nto deploy the common services on any OpenShift master or infrastructure node,\nyou must label the node as an OpenShift compute node with the following\ncommand:  `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc label node <master node host name/infrastructure node host name> node-role.kubernetes.io/compute=true\n`}</code></pre>\n    <h2>{`Run the Integration Cloud Pak install`}</h2>\n    <p>{`Integration Cloud Pak provides a single installer that installs the common\nservices as\nwell loads all the helm charts for integration capabilities. In this\nexample CP4I will be installed on the master node.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Download Integration Cloud Pak installer on the installer node. See `}<a parentName=\"li\" {...{\n          \"href\": \"../pre-reqs\"\n        }}>{`Pre-requisites`}</a>{` for guidance.\n`}</li>\n      <li parentName=\"ol\">{`Open a command line window on the boot node, and extract the contents of\nthe Cloud Pak. It is a general recommendation to create a directory in\n/opt and extract into that directory:  `}<pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{` tar xf ibm-cp-int-2019.4.1-online.tar.gz --directory /opt/cp4i\n`}</code></pre></li>\n    </ol>\n    <p>{`  Once untarred, you can navigate to the directory where the package was\nuntarred to and type `}<inlineCode parentName=\"p\">{`tree`}</inlineCode>{`.  It will look like the image below:`}</p>\n    <img {...{\n      \"src\": \"/assets/img/integration/onprem-online/1.untar-cp4i.png\",\n      \"alt\": null\n    }}></img>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Load the images onto your local docker registry:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`sudo docker load -i installer_files/cluster/images/icp-inception-3.2.2.tgz\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change to the `}<inlineCode parentName=\"p\">{`installer_files/cluster/`}</inlineCode>{` directory. Place the cluster\nconfiguration files (kubeconfig) in the `}<inlineCode parentName=\"p\">{`installer_files/cluster/`}</inlineCode>{` directory. If the configuration file is not already present, you can also use the following command after using oc login as admin.  Make sure your file only has one cluster context defined with in it, and that context is the location of your target cluster.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc config view --minify=true --flatten=true > kubeconfig\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Note down the IP addresses of OpenShift worker nodes. To get the IP\naddresses of the worker nodes, run:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc get nodes -o wide\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to your cluster directory `}<inlineCode parentName=\"p\">{`/opt/cp4i/installer/cluster`}</inlineCode>{`.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Edit the config.yaml with the information you have collected above. See\nthe example at the end of the page for guidance.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to your cluster directory `}<inlineCode parentName=\"p\">{`/opt/cp4i/installer_files/cluster`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Edit the config.yaml with the information you have collected above. See the example at the `}<a parentName=\"p\" {...{\n            \"href\": \"#configyaml\"\n          }}>{`end of the page`}</a>{` for guidance.  `}</p>\n      </li>\n    </ol>\n    <p>{`Here are the fields to update with your respective values based on your environment:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`under cluster_nodes heading -> set the hostnames for `}<inlineCode parentName=\"li\">{`Master`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Proxy`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Management`}</inlineCode>{`.  For non-prdoduction type system, setting and proxy to the same host is fine.  use the short name for your nodes (e.g. compute1, compute2 etc)`}</li>\n      <li parentName=\"ul\">{`under storage_class -> choose your default storage class here - use `}<inlineCode parentName=\"li\">{`oc get sc`}</inlineCode>{` to get a list of available storageclasses.`}</li>\n      <li parentName=\"ul\">{`docker_user -> `}<inlineCode parentName=\"li\">{`ekey`}</inlineCode></li>\n      <li parentName=\"ul\">{`docker_password -> set this to your entitlement key`}</li>\n    </ul>\n    <p>{`Instructions to get your entitlement key can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.ibm.com/CloudPakOpenContent/cloudpak-entitlement\"\n      }}>{`here`}</a>{` `}</p>\n    <ol {...{\n      \"start\": 9\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the installer with:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`sudo docker run -t --net=host -e LICENSE=accept -v $(pwd):/installer/cluster:z -v /var/run:/var/run:z -v /etc/docker:/etc/docker:z --security-opt label:disable ibmcom/icp-inception-amd64:3.2.2 addon -vvv | tee install.log\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If the namespaces for the different capabilities did not create you can create them manually using the scripts in `}<inlineCode parentName=\"p\">{`installer_files/cluster/resources`}</inlineCode>{` e.g. ace.yaml, apic.yaml.  Simply run each script using this syntax`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc create -f <scriptname>.yaml\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Once the process is complete, you will need to create your `}<inlineCode parentName=\"p\">{`ibm_entitlement_key`}</inlineCode>{` secrets in all of the main component namespaces.  You can accomplish this by running the `}<inlineCode parentName=\"p\">{`create_secrets.sh`}</inlineCode>{` script. Before doing so, export these two variables`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`export DOCKER_REGISTRY_USER=ekey\nexport DOCKER_REGISTRY_PASS=<your entitlement key>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`It will be helpful to understand what your proxy node address is, as it will be referenced several time when deploying the individual capabilities.  Run this command and take note of its output.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc get configmap -n kube-public ibmcloud-cluster-info -o=jsonpath=\"{.data.proxy_address}\"\\`\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Deploy Capabilities`}</h2>\n    <p>{`It is recommended that you install the Tracing capability first`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-tracing\"\n        }}>{`Tracing`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-integration\"\n        }}>{`App Connect`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-api-mgmt\"\n        }}>{`API Connect`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-queue-manager\"\n        }}>{`MQ`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-eventstreams\"\n        }}>{`Event Streams`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-fast-file-transfer\"\n        }}>{`Aspera`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-secure-gateway\"\n        }}>{`DataPower`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../deploy-asset-repo\"\n        }}>{`Asset Repository`}</a></li>\n    </ul>\n    <h2>{`Example files`}</h2>\n    <p>{`This section contains examples of files you will be using throughout the installation. Refer to them for guidance on how to populate your own version of the files.`}</p>\n    <h3>{`config.yaml`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`# Nodes selected to run common services components.\n#\n# The value of the master, proxy, and management parameters is an array,\n# by providing multiple nodes the common services will be configured in\n# a high availability configuration.\n#\n# It is recommended to install the components onto one or more openshift\n# worker nodes. The master, proxy, and management components can all share\n# the same node or set of nodes.\ncluster_nodes:\n  master:\n    - compute1\n  proxy:\n    - compute1\n  management:\n    - compute2\n# This storage class is used to store persistent data for the common services\n# components\nstorage_class: csi-cephfs\n## You can set a different storage class for storing log data.\n## By default it will use the value of storage_class.\n# elasticsearch_storage_class:\n# These settings enable the installer to install common services from the IBM\n# Entitled Registry. You will need to supply your entitlement key as described\n# at https://github.com/ibm/charts\nprivate_registry_enabled: true\nimage_repo: cp.icr.io/cp/icp-foundation\ndocker_username: ekey\ndocker_password: <your_entitlement_key>\ndefault_admin_password: admin\npassword_rules:\n  - '(.*)'\nmanagement_services:\n  # Common services\n  iam-policy-controller: enabled\n  metering: enabled\n  licensing: disabled\n  monitoring: enabled\n  nginx-ingress: enabled\n  common-web-ui: enabled\n  catalog-ui: enabled\n  mcm-kui: enabled\n  logging: enabled\n  audit-logging: disabled\n  system-healthcheck-service: disabled\n  multitenancy-enforcement: disabled\n  configmap-watcher: disabled\n# This section installs the IBM Cloud Pak for Integration Platform Navigator.\n# The navigator will be available after installation at:\n# https://ibm-icp4i-prod-integration.<openshift apps domain>/\narchive_addons:\n  icp4i:\n    namespace: integration\n    repo: local-charts\n    path: icp4icontent/IBM-Cloud-Pak-for-Integration-3.0.0.tgz\n    charts:\n      - name: ibm-icp4i-prod\n        values: {}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}